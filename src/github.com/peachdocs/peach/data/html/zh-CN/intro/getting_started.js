document.write("<h1>开始使用</h1>\n\n<p>同志们好！------ 你不是首长！</p>\n\n<p>同志们辛苦了！------ 我忙着创建 Peach 项目呢，别嚷嚷！</p>\n\n<p>根据约定，每个 Peach 项目都以 <code>*.peach</code> 的格式命名，在本例中，我们将使用 <code>my.peach</code>，并将项目放置在默认的下载目录：</p>\n<pre><code class=\"language-sh\">$ cd ~/Downloads\n</code></pre>\n\n<p>接下来，我们需要做一些基本设定（假设路径 <code>$GOPATH/bin</code> 已经被添加到环境变量 <code>$PATH</code>）。</p>\n\n<p>如果您是通过源码安装 Peach 的，应该执行与以下类似的命令：</p>\n<pre><code class=\"language-sh\">$ peach new -target=my.peach\n➜  Creating 'my.peach'...\n➜  Creating 'templates'...\n➜  Creating 'public'...\nDo you want to use custom templates?[Y/n] n\n✓  Done!\n</code></pre>\n\n<p>好了，来看看目前我们的项目是个什么情况吧：</p>\n<pre><code class=\"language-sh\">$ cd my.peach\n$ tree -L 2\n.\n├── conf\n│   ├── app.ini\n│   └── locale\n├── public\n│   ├── css\n│   ├── fonts\n│   ├── img\n│   └── js\n└── templates\n    ├── 404.html\n    ├── base.html\n    ├── disqus.html\n    ├── docs.html\n    ├── duoshuo.html\n    ├── footer.html\n    ├── home.html\n    ├── navbar.html\n    └── search.html\n</code></pre>\n\n<p>不错不错，差不多都搞定了，不过还差一样，是什么呢？当然是自定义配置啦。</p>\n\n<p>为了方便起见，我们直接使用 Peach 自己的配置，因为它已经 <a href=\"https://github.com/peachdocs/peach.peach\">开源在 GitHub</a> 上了。 :heart_eyes:</p>\n\n<p>卧槽，这都（shen）可（me）以（gui）？</p>\n\n<p>当然没问题，我们直接克隆到本地系统并命名为 <code>custom</code> 即可，因为该名称就是 Peach 用来加载所有自定义设置的目录。</p>\n<pre><code class=\"language-sh\">git clone https://github.com/peachdocs/peach.peach.git custom\n</code></pre>\n\n<p>简单粗暴！请给自己的机智点 32 个赞。:clap:</p>\n\n<p>好了，快点在我们的项目目录下（<code>~/Downloads/my.peach</code>）运行 Peach 吧：</p>\n<pre><code class=\"language-sh\">$ peach web\n</code></pre>\n\n<p>现在，我们就可以从控制台看到一些日志啦：</p>\n<pre><code>[Peach] 15-10-06 19:58:44 [ INFO] Peach 0.8.0.1025\n[Peach] 15-10-06 19:58:44 [ INFO] Peach Server Listen on 0.0.0.0:5556\n</code></pre>\n\n<p>从日志说明来看，Peach 将监听的端口自定义为了 <code>5556</code>（默认为<code>5555</code>）。</p>\n\n<p>此时打开浏览器，访问 <a href=\"http://localhost:5556/\">http://localhost:5556/</a> ，哈哈哈，我真是太佩服自己了。</p>\n\n<p>如果您对 Peach 的自定义配置感兴趣，让我通过 <code>custom/app.ini</code> 文件简单地解释一下：</p>\n<pre><code class=\"language-ini\"># 修改监听端口\nHTTP_PORT = 5556\n\n[docs]\n# 设置文档类型为远程 Git 源\nTYPE = remote\n# 远程 Git 源的 URL\nTARGET = https://github.com/Unknwon/peach-docs.git\n</code></pre>\n\n<p>现在您应该明白为什么我们之前什么都没做就可以直接浏览文档了吧？</p>\n\n<p>好了，让我们继续学习下一个部分：<a href=\"../howto/documentation\">创建文档仓库</a>。</p>\n")